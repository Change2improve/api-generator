# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from onshape_client.models.assemblies_get_bill_of_materials_response200_bom_table_bom_source import AssembliesGetBillOfMaterialsResponse200BomTableBomSource  # noqa: F401,E501
from onshape_client.models.assemblies_get_bill_of_materials_response200_bom_table_headers import AssembliesGetBillOfMaterialsResponse200BomTableHeaders  # noqa: F401,E501
from onshape_client.models.assemblies_get_bill_of_materials_response200_bom_table_items import AssembliesGetBillOfMaterialsResponse200BomTableItems  # noqa: F401,E501


class AssembliesGetBillOfMaterialsResponse200BomTable(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'items': 'list[AssembliesGetBillOfMaterialsResponse200BomTableItems]',
        'headers': 'list[AssembliesGetBillOfMaterialsResponse200BomTableHeaders]',
        'format_version': 'str',
        'part_number': 'str',
        'bom_source': 'AssembliesGetBillOfMaterialsResponse200BomTableBomSource',
        'id': 'str',
        'created_at': 'str',
        'name': 'str'
    }

    attribute_map = {
        'description': 'description',
        'items': 'items',
        'headers': 'headers',
        'format_version': 'formatVersion',
        'part_number': 'partNumber',
        'bom_source': 'bomSource',
        'id': 'id',
        'created_at': 'createdAt',
        'name': 'name'
    }

    def __init__(self, description=None, items=None, headers=None, format_version=None, part_number=None, bom_source=None, id=None, created_at=None, name=None):  # noqa: E501
        """AssembliesGetBillOfMaterialsResponse200BomTable - a model defined in Swagger"""  # noqa: E501

        self._description = None
        self._items = None
        self._headers = None
        self._format_version = None
        self._part_number = None
        self._bom_source = None
        self._id = None
        self._created_at = None
        self._name = None
        self.discriminator = None

        if description is not None:
            self.description = description
        if items is not None:
            self.items = items
        if headers is not None:
            self.headers = headers
        if format_version is not None:
            self.format_version = format_version
        if part_number is not None:
            self.part_number = part_number
        if bom_source is not None:
            self.bom_source = bom_source
        if id is not None:
            self.id = id
        if created_at is not None:
            self.created_at = created_at
        if name is not None:
            self.name = name

    @property
    def description(self):
        """Gets the description of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The description of the BOM. Currently empty.  # noqa: E501

        :return: The description of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The description of the BOM. Currently empty.  # noqa: E501

        :param description: The description of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def items(self):
        """Gets the items of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The non-header rows of the BOM table.  # noqa: E501

        :return: The items of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: list[AssembliesGetBillOfMaterialsResponse200BomTableItems]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The non-header rows of the BOM table.  # noqa: E501

        :param items: The items of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: list[AssembliesGetBillOfMaterialsResponse200BomTableItems]
        """

        self._items = items

    @property
    def headers(self):
        """Gets the headers of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        BOM table column headers  # noqa: E501

        :return: The headers of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: list[AssembliesGetBillOfMaterialsResponse200BomTableHeaders]
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this AssembliesGetBillOfMaterialsResponse200BomTable.

        BOM table column headers  # noqa: E501

        :param headers: The headers of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: list[AssembliesGetBillOfMaterialsResponse200BomTableHeaders]
        """

        self._headers = headers

    @property
    def format_version(self):
        """Gets the format_version of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The version of the Onshape BOM JSON Standard that this             response complies with  # noqa: E501

        :return: The format_version of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._format_version

    @format_version.setter
    def format_version(self, format_version):
        """Sets the format_version of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The version of the Onshape BOM JSON Standard that this             response complies with  # noqa: E501

        :param format_version: The format_version of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._format_version = format_version

    @property
    def part_number(self):
        """Gets the part_number of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The partNumber of the BOM. Currently empty.  # noqa: E501

        :return: The part_number of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The partNumber of the BOM. Currently empty.  # noqa: E501

        :param part_number: The part_number of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._part_number = part_number

    @property
    def bom_source(self):
        """Gets the bom_source of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501


        :return: The bom_source of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: AssembliesGetBillOfMaterialsResponse200BomTableBomSource
        """
        return self._bom_source

    @bom_source.setter
    def bom_source(self, bom_source):
        """Sets the bom_source of this AssembliesGetBillOfMaterialsResponse200BomTable.


        :param bom_source: The bom_source of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: AssembliesGetBillOfMaterialsResponse200BomTableBomSource
        """

        self._bom_source = bom_source

    @property
    def id(self):
        """Gets the id of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The id of the BOM  # noqa: E501

        :return: The id of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The id of the BOM  # noqa: E501

        :param id: The id of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def created_at(self):
        """Gets the created_at of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The UTC date and time the BOM data was exported.  # noqa: E501

        :return: The created_at of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The UTC date and time the BOM data was exported.  # noqa: E501

        :param created_at: The created_at of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def name(self):
        """Gets the name of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501

        The name of the BOM  # noqa: E501

        :return: The name of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AssembliesGetBillOfMaterialsResponse200BomTable.

        The name of the BOM  # noqa: E501

        :param name: The name of this AssembliesGetBillOfMaterialsResponse200BomTable.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AssembliesGetBillOfMaterialsResponse200BomTable):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
