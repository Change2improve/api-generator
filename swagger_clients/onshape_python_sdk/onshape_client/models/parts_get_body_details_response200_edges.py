# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from onshape_client.models.parts_get_body_details_response200_curve import PartsGetBodyDetailsResponse200Curve  # noqa: F401,E501
from onshape_client.models.parts_get_body_details_response200_geometry import PartsGetBodyDetailsResponse200Geometry  # noqa: F401,E501


class PartsGetBodyDetailsResponse200Edges(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'geometry': 'PartsGetBodyDetailsResponse200Geometry',
        'curve': 'PartsGetBodyDetailsResponse200Curve',
        'id': 'str',
        'vertices': 'list[str]'
    }

    attribute_map = {
        'geometry': 'geometry',
        'curve': 'curve',
        'id': 'id',
        'vertices': 'vertices'
    }

    def __init__(self, geometry=None, curve=None, id=None, vertices=None):  # noqa: E501
        """PartsGetBodyDetailsResponse200Edges - a model defined in Swagger"""  # noqa: E501

        self._geometry = None
        self._curve = None
        self._id = None
        self._vertices = None
        self.discriminator = None

        if geometry is not None:
            self.geometry = geometry
        if curve is not None:
            self.curve = curve
        if id is not None:
            self.id = id
        if vertices is not None:
            self.vertices = vertices

    @property
    def geometry(self):
        """Gets the geometry of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501


        :return: The geometry of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :rtype: PartsGetBodyDetailsResponse200Geometry
        """
        return self._geometry

    @geometry.setter
    def geometry(self, geometry):
        """Sets the geometry of this PartsGetBodyDetailsResponse200Edges.


        :param geometry: The geometry of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :type: PartsGetBodyDetailsResponse200Geometry
        """

        self._geometry = geometry

    @property
    def curve(self):
        """Gets the curve of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501


        :return: The curve of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :rtype: PartsGetBodyDetailsResponse200Curve
        """
        return self._curve

    @curve.setter
    def curve(self, curve):
        """Sets the curve of this PartsGetBodyDetailsResponse200Edges.


        :param curve: The curve of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :type: PartsGetBodyDetailsResponse200Curve
        """

        self._curve = curve

    @property
    def id(self):
        """Gets the id of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501

        Edge ID  # noqa: E501

        :return: The id of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PartsGetBodyDetailsResponse200Edges.

        Edge ID  # noqa: E501

        :param id: The id of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def vertices(self):
        """Gets the vertices of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501

        Array of vertex IDs  # noqa: E501

        :return: The vertices of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :rtype: list[str]
        """
        return self._vertices

    @vertices.setter
    def vertices(self, vertices):
        """Sets the vertices of this PartsGetBodyDetailsResponse200Edges.

        Array of vertex IDs  # noqa: E501

        :param vertices: The vertices of this PartsGetBodyDetailsResponse200Edges.  # noqa: E501
        :type: list[str]
        """

        self._vertices = vertices

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PartsGetBodyDetailsResponse200Edges):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
