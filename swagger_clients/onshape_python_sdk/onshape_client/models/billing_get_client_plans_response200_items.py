# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from onshape_client.models.billing_get_client_plans_response200_discount import BillingGetClientPlansResponse200Discount  # noqa: F401,E501


class BillingGetClientPlansResponse200Items(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'group': 'str',
        'description': 'str',
        'plan_type': 'float',
        'trial_period_days': 'float',
        'amount_cents': 'float',
        'interval': 'str',
        'discount': 'BillingGetClientPlansResponse200Discount',
        'discount_info': 'object',
        'hidden': 'bool',
        'application_id': 'str',
        'id': 'str'
    }

    attribute_map = {
        'group': 'group',
        'description': 'description',
        'plan_type': 'planType',
        'trial_period_days': 'trialPeriodDays',
        'amount_cents': 'amountCents',
        'interval': 'interval',
        'discount': 'discount',
        'discount_info': 'discountInfo',
        'hidden': 'hidden',
        'application_id': 'applicationId',
        'id': 'id'
    }

    def __init__(self, group=None, description=None, plan_type=None, trial_period_days=None, amount_cents=None, interval=None, discount=None, discount_info=None, hidden=None, application_id=None, id=None):  # noqa: E501
        """BillingGetClientPlansResponse200Items - a model defined in Swagger"""  # noqa: E501

        self._group = None
        self._description = None
        self._plan_type = None
        self._trial_period_days = None
        self._amount_cents = None
        self._interval = None
        self._discount = None
        self._discount_info = None
        self._hidden = None
        self._application_id = None
        self._id = None
        self.discriminator = None

        if group is not None:
            self.group = group
        if description is not None:
            self.description = description
        if plan_type is not None:
            self.plan_type = plan_type
        if trial_period_days is not None:
            self.trial_period_days = trial_period_days
        if amount_cents is not None:
            self.amount_cents = amount_cents
        if interval is not None:
            self.interval = interval
        if discount is not None:
            self.discount = discount
        if discount_info is not None:
            self.discount_info = discount_info
        if hidden is not None:
            self.hidden = hidden
        if application_id is not None:
            self.application_id = application_id
        if id is not None:
            self.id = id

    @property
    def group(self):
        """Gets the group of this BillingGetClientPlansResponse200Items.  # noqa: E501

        Plan group  # noqa: E501

        :return: The group of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: str
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this BillingGetClientPlansResponse200Items.

        Plan group  # noqa: E501

        :param group: The group of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: str
        """

        self._group = group

    @property
    def description(self):
        """Gets the description of this BillingGetClientPlansResponse200Items.  # noqa: E501

        Plan description  # noqa: E501

        :return: The description of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BillingGetClientPlansResponse200Items.

        Plan description  # noqa: E501

        :param description: The description of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def plan_type(self):
        """Gets the plan_type of this BillingGetClientPlansResponse200Items.  # noqa: E501

        plan type (0-RECURRING, 1-CONSUMABLE, 2-ONE_TIME)  # noqa: E501

        :return: The plan_type of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: float
        """
        return self._plan_type

    @plan_type.setter
    def plan_type(self, plan_type):
        """Sets the plan_type of this BillingGetClientPlansResponse200Items.

        plan type (0-RECURRING, 1-CONSUMABLE, 2-ONE_TIME)  # noqa: E501

        :param plan_type: The plan_type of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: float
        """

        self._plan_type = plan_type

    @property
    def trial_period_days(self):
        """Gets the trial_period_days of this BillingGetClientPlansResponse200Items.  # noqa: E501

        trial period days  # noqa: E501

        :return: The trial_period_days of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: float
        """
        return self._trial_period_days

    @trial_period_days.setter
    def trial_period_days(self, trial_period_days):
        """Sets the trial_period_days of this BillingGetClientPlansResponse200Items.

        trial period days  # noqa: E501

        :param trial_period_days: The trial_period_days of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: float
        """

        self._trial_period_days = trial_period_days

    @property
    def amount_cents(self):
        """Gets the amount_cents of this BillingGetClientPlansResponse200Items.  # noqa: E501

        Amount in cents  # noqa: E501

        :return: The amount_cents of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: float
        """
        return self._amount_cents

    @amount_cents.setter
    def amount_cents(self, amount_cents):
        """Sets the amount_cents of this BillingGetClientPlansResponse200Items.

        Amount in cents  # noqa: E501

        :param amount_cents: The amount_cents of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: float
        """

        self._amount_cents = amount_cents

    @property
    def interval(self):
        """Gets the interval of this BillingGetClientPlansResponse200Items.  # noqa: E501

        charge interval month or year  # noqa: E501

        :return: The interval of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this BillingGetClientPlansResponse200Items.

        charge interval month or year  # noqa: E501

        :param interval: The interval of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: str
        """

        self._interval = interval

    @property
    def discount(self):
        """Gets the discount of this BillingGetClientPlansResponse200Items.  # noqa: E501


        :return: The discount of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: BillingGetClientPlansResponse200Discount
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this BillingGetClientPlansResponse200Items.


        :param discount: The discount of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: BillingGetClientPlansResponse200Discount
        """

        self._discount = discount

    @property
    def discount_info(self):
        """Gets the discount_info of this BillingGetClientPlansResponse200Items.  # noqa: E501

        Information about discount  # noqa: E501

        :return: The discount_info of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: object
        """
        return self._discount_info

    @discount_info.setter
    def discount_info(self, discount_info):
        """Sets the discount_info of this BillingGetClientPlansResponse200Items.

        Information about discount  # noqa: E501

        :param discount_info: The discount_info of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: object
        """

        self._discount_info = discount_info

    @property
    def hidden(self):
        """Gets the hidden of this BillingGetClientPlansResponse200Items.  # noqa: E501

        is hidden  # noqa: E501

        :return: The hidden of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this BillingGetClientPlansResponse200Items.

        is hidden  # noqa: E501

        :param hidden: The hidden of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: bool
        """

        self._hidden = hidden

    @property
    def application_id(self):
        """Gets the application_id of this BillingGetClientPlansResponse200Items.  # noqa: E501

        application id  # noqa: E501

        :return: The application_id of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this BillingGetClientPlansResponse200Items.

        application id  # noqa: E501

        :param application_id: The application_id of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: str
        """

        self._application_id = application_id

    @property
    def id(self):
        """Gets the id of this BillingGetClientPlansResponse200Items.  # noqa: E501

        plan Id  # noqa: E501

        :return: The id of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BillingGetClientPlansResponse200Items.

        plan Id  # noqa: E501

        :param id: The id of this BillingGetClientPlansResponse200Items.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BillingGetClientPlansResponse200Items):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
