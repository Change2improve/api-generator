# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from onshape_client.models.part_studios_get_body_details_response200_surface import PartStudiosGetBodyDetailsResponse200Surface  # noqa: F401,E501
from onshape_client.models.parts_get_body_details_response200_box import PartsGetBodyDetailsResponse200Box  # noqa: F401,E501
from onshape_client.models.parts_get_body_details_response200_loops import PartsGetBodyDetailsResponse200Loops  # noqa: F401,E501


class PartStudiosGetBodyDetailsResponse200Faces(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'box': 'PartsGetBodyDetailsResponse200Box',
        'orientation': 'bool',
        'area': 'float',
        'surface': 'PartStudiosGetBodyDetailsResponse200Surface',
        'loops': 'list[PartsGetBodyDetailsResponse200Loops]',
        'id': 'str'
    }

    attribute_map = {
        'box': 'box',
        'orientation': 'orientation',
        'area': 'area',
        'surface': 'surface',
        'loops': 'loops',
        'id': 'id'
    }

    def __init__(self, box=None, orientation=None, area=None, surface=None, loops=None, id=None):  # noqa: E501
        """PartStudiosGetBodyDetailsResponse200Faces - a model defined in Swagger"""  # noqa: E501

        self._box = None
        self._orientation = None
        self._area = None
        self._surface = None
        self._loops = None
        self._id = None
        self.discriminator = None

        if box is not None:
            self.box = box
        if orientation is not None:
            self.orientation = orientation
        if area is not None:
            self.area = area
        if surface is not None:
            self.surface = surface
        if loops is not None:
            self.loops = loops
        if id is not None:
            self.id = id

    @property
    def box(self):
        """Gets the box of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501


        :return: The box of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: PartsGetBodyDetailsResponse200Box
        """
        return self._box

    @box.setter
    def box(self, box):
        """Sets the box of this PartStudiosGetBodyDetailsResponse200Faces.


        :param box: The box of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: PartsGetBodyDetailsResponse200Box
        """

        self._box = box

    @property
    def orientation(self):
        """Gets the orientation of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501

        Orientation of a face  # noqa: E501

        :return: The orientation of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: bool
        """
        return self._orientation

    @orientation.setter
    def orientation(self, orientation):
        """Sets the orientation of this PartStudiosGetBodyDetailsResponse200Faces.

        Orientation of a face  # noqa: E501

        :param orientation: The orientation of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: bool
        """

        self._orientation = orientation

    @property
    def area(self):
        """Gets the area of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501

        Area of a face  # noqa: E501

        :return: The area of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: float
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this PartStudiosGetBodyDetailsResponse200Faces.

        Area of a face  # noqa: E501

        :param area: The area of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: float
        """

        self._area = area

    @property
    def surface(self):
        """Gets the surface of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501


        :return: The surface of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: PartStudiosGetBodyDetailsResponse200Surface
        """
        return self._surface

    @surface.setter
    def surface(self, surface):
        """Sets the surface of this PartStudiosGetBodyDetailsResponse200Faces.


        :param surface: The surface of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: PartStudiosGetBodyDetailsResponse200Surface
        """

        self._surface = surface

    @property
    def loops(self):
        """Gets the loops of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501

        Loops of a face  # noqa: E501

        :return: The loops of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: list[PartsGetBodyDetailsResponse200Loops]
        """
        return self._loops

    @loops.setter
    def loops(self, loops):
        """Sets the loops of this PartStudiosGetBodyDetailsResponse200Faces.

        Loops of a face  # noqa: E501

        :param loops: The loops of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: list[PartsGetBodyDetailsResponse200Loops]
        """

        self._loops = loops

    @property
    def id(self):
        """Gets the id of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501

        Face ID  # noqa: E501

        :return: The id of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PartStudiosGetBodyDetailsResponse200Faces.

        Face ID  # noqa: E501

        :param id: The id of this PartStudiosGetBodyDetailsResponse200Faces.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PartStudiosGetBodyDetailsResponse200Faces):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
