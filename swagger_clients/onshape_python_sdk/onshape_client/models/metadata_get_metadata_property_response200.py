# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from onshape_client.models.metadata_get_metadata_property_response200_property_config_info_list import MetadataGetMetadataPropertyResponse200PropertyConfigInfoList  # noqa: F401,E501


class MetadataGetMetadataPropertyResponse200(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'property_config_info_list': 'list[MetadataGetMetadataPropertyResponse200PropertyConfigInfoList]',
        'object_def_name': 'str',
        'description': 'str',
        'search_boost': 'float',
        'owner_type': 'float',
        'value_type': 'float',
        'enum_values': 'list[object]',
        'namespace': 'str',
        'editable_in_version': 'bool',
        'blob_mime_type': 'str',
        'safe_name': 'str',
        'owner_id': 'str',
        'array': 'bool',
        'editable_in_microversion': 'bool',
        'id': 'str',
        'name': 'str'
    }

    attribute_map = {
        'property_config_info_list': 'propertyConfigInfoList',
        'object_def_name': 'objectDefName',
        'description': 'description',
        'search_boost': 'searchBoost',
        'owner_type': 'ownerType',
        'value_type': 'valueType',
        'enum_values': 'enumValues',
        'namespace': 'namespace',
        'editable_in_version': 'editableInVersion',
        'blob_mime_type': 'blobMimeType',
        'safe_name': 'safeName',
        'owner_id': 'ownerId',
        'array': 'array',
        'editable_in_microversion': 'editableInMicroversion',
        'id': 'id',
        'name': 'name'
    }

    def __init__(self, property_config_info_list=None, object_def_name=None, description=None, search_boost=None, owner_type=None, value_type=None, enum_values=None, namespace=None, editable_in_version=None, blob_mime_type=None, safe_name=None, owner_id=None, array=None, editable_in_microversion=None, id=None, name=None):  # noqa: E501
        """MetadataGetMetadataPropertyResponse200 - a model defined in Swagger"""  # noqa: E501

        self._property_config_info_list = None
        self._object_def_name = None
        self._description = None
        self._search_boost = None
        self._owner_type = None
        self._value_type = None
        self._enum_values = None
        self._namespace = None
        self._editable_in_version = None
        self._blob_mime_type = None
        self._safe_name = None
        self._owner_id = None
        self._array = None
        self._editable_in_microversion = None
        self._id = None
        self._name = None
        self.discriminator = None

        if property_config_info_list is not None:
            self.property_config_info_list = property_config_info_list
        if object_def_name is not None:
            self.object_def_name = object_def_name
        if description is not None:
            self.description = description
        if search_boost is not None:
            self.search_boost = search_boost
        if owner_type is not None:
            self.owner_type = owner_type
        if value_type is not None:
            self.value_type = value_type
        if enum_values is not None:
            self.enum_values = enum_values
        if namespace is not None:
            self.namespace = namespace
        if editable_in_version is not None:
            self.editable_in_version = editable_in_version
        if blob_mime_type is not None:
            self.blob_mime_type = blob_mime_type
        if safe_name is not None:
            self.safe_name = safe_name
        if owner_id is not None:
            self.owner_id = owner_id
        if array is not None:
            self.array = array
        if editable_in_microversion is not None:
            self.editable_in_microversion = editable_in_microversion
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name

    @property
    def property_config_info_list(self):
        """Gets the property_config_info_list of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Additional information about property only returned if             schemaId is included in request  # noqa: E501

        :return: The property_config_info_list of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: list[MetadataGetMetadataPropertyResponse200PropertyConfigInfoList]
        """
        return self._property_config_info_list

    @property_config_info_list.setter
    def property_config_info_list(self, property_config_info_list):
        """Sets the property_config_info_list of this MetadataGetMetadataPropertyResponse200.

        Additional information about property only returned if             schemaId is included in request  # noqa: E501

        :param property_config_info_list: The property_config_info_list of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: list[MetadataGetMetadataPropertyResponse200PropertyConfigInfoList]
        """

        self._property_config_info_list = property_config_info_list

    @property
    def object_def_name(self):
        """Gets the object_def_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Object type name if valueType == OBJECT (6)  # noqa: E501

        :return: The object_def_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._object_def_name

    @object_def_name.setter
    def object_def_name(self, object_def_name):
        """Sets the object_def_name of this MetadataGetMetadataPropertyResponse200.

        Object type name if valueType == OBJECT (6)  # noqa: E501

        :param object_def_name: The object_def_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._object_def_name = object_def_name

    @property
    def description(self):
        """Gets the description of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property description  # noqa: E501

        :return: The description of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this MetadataGetMetadataPropertyResponse200.

        Property description  # noqa: E501

        :param description: The description of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def search_boost(self):
        """Gets the search_boost of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Relative ordering of search importance. Baseline is 1.0  # noqa: E501

        :return: The search_boost of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: float
        """
        return self._search_boost

    @search_boost.setter
    def search_boost(self, search_boost):
        """Sets the search_boost of this MetadataGetMetadataPropertyResponse200.

        Relative ordering of search importance. Baseline is 1.0  # noqa: E501

        :param search_boost: The search_boost of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: float
        """

        self._search_boost = search_boost

    @property
    def owner_type(self):
        """Gets the owner_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property owner type, which can be: 0: user, 1: company  # noqa: E501

        :return: The owner_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: float
        """
        return self._owner_type

    @owner_type.setter
    def owner_type(self, owner_type):
        """Sets the owner_type of this MetadataGetMetadataPropertyResponse200.

        Property owner type, which can be: 0: user, 1: company  # noqa: E501

        :param owner_type: The owner_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: float
        """

        self._owner_type = owner_type

    @property
    def value_type(self):
        """Gets the value_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Value type of property, which can be: 0:STRING, 1:BOOL, 2:INT,             3:DOUBLE, 4:DATE, 5:ENUM, 6:OBJECT, 7:BLOB, 8:USER  # noqa: E501

        :return: The value_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: float
        """
        return self._value_type

    @value_type.setter
    def value_type(self, value_type):
        """Sets the value_type of this MetadataGetMetadataPropertyResponse200.

        Value type of property, which can be: 0:STRING, 1:BOOL, 2:INT,             3:DOUBLE, 4:DATE, 5:ENUM, 6:OBJECT, 7:BLOB, 8:USER  # noqa: E501

        :param value_type: The value_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: float
        """

        self._value_type = value_type

    @property
    def enum_values(self):
        """Gets the enum_values of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Set of enum values if valueType == ENUM (5)  # noqa: E501

        :return: The enum_values of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: list[object]
        """
        return self._enum_values

    @enum_values.setter
    def enum_values(self, enum_values):
        """Sets the enum_values of this MetadataGetMetadataPropertyResponse200.

        Set of enum values if valueType == ENUM (5)  # noqa: E501

        :param enum_values: The enum_values of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: list[object]
        """

        self._enum_values = enum_values

    @property
    def namespace(self):
        """Gets the namespace of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property namespace (use to disambiguate properties with same name)  # noqa: E501

        :return: The namespace of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this MetadataGetMetadataPropertyResponse200.

        Property namespace (use to disambiguate properties with same name)  # noqa: E501

        :param namespace: The namespace of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._namespace = namespace

    @property
    def editable_in_version(self):
        """Gets the editable_in_version of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        True if this property can be edited in a Version  # noqa: E501

        :return: The editable_in_version of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: bool
        """
        return self._editable_in_version

    @editable_in_version.setter
    def editable_in_version(self, editable_in_version):
        """Sets the editable_in_version of this MetadataGetMetadataPropertyResponse200.

        True if this property can be edited in a Version  # noqa: E501

        :param editable_in_version: The editable_in_version of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: bool
        """

        self._editable_in_version = editable_in_version

    @property
    def blob_mime_type(self):
        """Gets the blob_mime_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Blob mime type if valueType == BLOB (7)  # noqa: E501

        :return: The blob_mime_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._blob_mime_type

    @blob_mime_type.setter
    def blob_mime_type(self, blob_mime_type):
        """Sets the blob_mime_type of this MetadataGetMetadataPropertyResponse200.

        Blob mime type if valueType == BLOB (7)  # noqa: E501

        :param blob_mime_type: The blob_mime_type of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._blob_mime_type = blob_mime_type

    @property
    def safe_name(self):
        """Gets the safe_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Safe name  # noqa: E501

        :return: The safe_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._safe_name

    @safe_name.setter
    def safe_name(self, safe_name):
        """Sets the safe_name of this MetadataGetMetadataPropertyResponse200.

        Safe name  # noqa: E501

        :param safe_name: The safe_name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._safe_name = safe_name

    @property
    def owner_id(self):
        """Gets the owner_id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property owner ID  # noqa: E501

        :return: The owner_id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this MetadataGetMetadataPropertyResponse200.

        Property owner ID  # noqa: E501

        :param owner_id: The owner_id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._owner_id = owner_id

    @property
    def array(self):
        """Gets the array of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        True if property is an array type  # noqa: E501

        :return: The array of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: bool
        """
        return self._array

    @array.setter
    def array(self, array):
        """Sets the array of this MetadataGetMetadataPropertyResponse200.

        True if property is an array type  # noqa: E501

        :param array: The array of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: bool
        """

        self._array = array

    @property
    def editable_in_microversion(self):
        """Gets the editable_in_microversion of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        True if this property can be edited in a Microversion  # noqa: E501

        :return: The editable_in_microversion of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: bool
        """
        return self._editable_in_microversion

    @editable_in_microversion.setter
    def editable_in_microversion(self, editable_in_microversion):
        """Sets the editable_in_microversion of this MetadataGetMetadataPropertyResponse200.

        True if this property can be edited in a Microversion  # noqa: E501

        :param editable_in_microversion: The editable_in_microversion of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: bool
        """

        self._editable_in_microversion = editable_in_microversion

    @property
    def id(self):
        """Gets the id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property ID  # noqa: E501

        :return: The id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MetadataGetMetadataPropertyResponse200.

        Property ID  # noqa: E501

        :param id: The id of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501

        Property name  # noqa: E501

        :return: The name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetadataGetMetadataPropertyResponse200.

        Property name  # noqa: E501

        :param name: The name of this MetadataGetMetadataPropertyResponse200.  # noqa: E501
        :type: str
        """

        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MetadataGetMetadataPropertyResponse200):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
