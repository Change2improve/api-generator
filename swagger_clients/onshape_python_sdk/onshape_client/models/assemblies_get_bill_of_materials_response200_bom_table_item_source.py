# coding: utf-8

"""
    Onshape API

    Onshape API  # noqa: E501

    OpenAPI spec version: 1.0.0
    Contact: ekeller@onshape.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AssembliesGetBillOfMaterialsResponse200BomTableItemSource(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'element_id': 'str',
        'part_id': 'str',
        'wvm_type': 'str',
        'wvm_id': 'str',
        'document_id': 'str'
    }

    attribute_map = {
        'element_id': 'elementId',
        'part_id': 'partId',
        'wvm_type': 'wvmType',
        'wvm_id': 'wvmId',
        'document_id': 'documentId'
    }

    def __init__(self, element_id=None, part_id=None, wvm_type=None, wvm_id=None, document_id=None):  # noqa: E501
        """AssembliesGetBillOfMaterialsResponse200BomTableItemSource - a model defined in Swagger"""  # noqa: E501

        self._element_id = None
        self._part_id = None
        self._wvm_type = None
        self._wvm_id = None
        self._document_id = None
        self.discriminator = None

        if element_id is not None:
            self.element_id = element_id
        if part_id is not None:
            self.part_id = part_id
        if wvm_type is not None:
            self.wvm_type = wvm_type
        if wvm_id is not None:
            self.wvm_id = wvm_id
        if document_id is not None:
            self.document_id = document_id

    @property
    def element_id(self):
        """Gets the element_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501

        The id of the element in the workspace or             version of the document containing the item  # noqa: E501

        :return: The element_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :rtype: str
        """
        return self._element_id

    @element_id.setter
    def element_id(self, element_id):
        """Sets the element_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.

        The id of the element in the workspace or             version of the document containing the item  # noqa: E501

        :param element_id: The element_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :type: str
        """

        self._element_id = element_id

    @property
    def part_id(self):
        """Gets the part_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501

        The id of the part for this item. Will be             blank if the item is not a part  # noqa: E501

        :return: The part_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :rtype: str
        """
        return self._part_id

    @part_id.setter
    def part_id(self, part_id):
        """Sets the part_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.

        The id of the part for this item. Will be             blank if the item is not a part  # noqa: E501

        :param part_id: The part_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :type: str
        """

        self._part_id = part_id

    @property
    def wvm_type(self):
        """Gets the wvm_type of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501

        \"v\" if the item is from a version or \"w\" if             it is from a workspace  # noqa: E501

        :return: The wvm_type of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :rtype: str
        """
        return self._wvm_type

    @wvm_type.setter
    def wvm_type(self, wvm_type):
        """Sets the wvm_type of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.

        \"v\" if the item is from a version or \"w\" if             it is from a workspace  # noqa: E501

        :param wvm_type: The wvm_type of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :type: str
        """

        self._wvm_type = wvm_type

    @property
    def wvm_id(self):
        """Gets the wvm_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501

        The id of the version or workspace containing             the item  # noqa: E501

        :return: The wvm_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :rtype: str
        """
        return self._wvm_id

    @wvm_id.setter
    def wvm_id(self, wvm_id):
        """Sets the wvm_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.

        The id of the version or workspace containing             the item  # noqa: E501

        :param wvm_id: The wvm_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :type: str
        """

        self._wvm_id = wvm_id

    @property
    def document_id(self):
        """Gets the document_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501

        The id of the onshape document containing             this item  # noqa: E501

        :return: The document_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :rtype: str
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.

        The id of the onshape document containing             this item  # noqa: E501

        :param document_id: The document_id of this AssembliesGetBillOfMaterialsResponse200BomTableItemSource.  # noqa: E501
        :type: str
        """

        self._document_id = document_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AssembliesGetBillOfMaterialsResponse200BomTableItemSource):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
